class Solution:
    def subarraySum(self, nums: List[int], k: int) -> int:
        #NeetCode
        #O(n) time and space

        result=0
        curSum=0
        prefixSums={0:1}

        for n in nums:
            curSum+=n
            diff=curSum-k

            result+=prefixSums.get(diff,0) # 0 as default value if this value does not exists
            prefixSums[curSum]=1+prefixSums.get(curSum,0)
        
        return result
